// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Counter Component renders with all props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Counter
    handleClearValue={[Function]}
    handleDecrement={[Function]}
    handleIncrement={[Function]}
    handleInputChange={[Function]}
    handleSetDirectly={[Function]}
    inputValue={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef>
        <ForwardRef
          onClick={[Function]}
        >
          Increment
        </ForwardRef>
        <ForwardRef
          onClick={[Function]}
        >
          Decrement
        </ForwardRef>
        <ForwardRef
          onClick={[Function]}
        >
          Clear
        </ForwardRef>
        Set Directly:
        <ForwardRef
          onChange={[Function]}
          type="number"
          value={0}
        />
         
        <br />
        <ForwardRef
          onClick={[Function]}
        >
          Save
        </ForwardRef>
      </ForwardRef>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            onClick={[Function]}
          >
            Increment
          </ForwardRef>,
          <ForwardRef
            onClick={[Function]}
          >
            Decrement
          </ForwardRef>,
          <ForwardRef
            onClick={[Function]}
          >
            Clear
          </ForwardRef>,
          "Set Directly:",
          <ForwardRef
            onChange={[Function]}
            type="number"
            value={0}
          />,
          " ",
          <br />,
          <ForwardRef
            onClick={[Function]}
          >
            Save
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Increment",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Increment",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
              ],
            },
            "displayName": "Button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Decrement",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Decrement",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
              ],
            },
            "displayName": "Button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Clear",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Clear",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
              ],
            },
            "displayName": "Button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        "Set Directly:",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onChange": [Function],
            "type": "number",
            "value": 0,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  box-sizing: border-box;
  display: block;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.87);
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.26);
  outline: 0;
  width: 100%;
  padding: 0;
  box-shadow: none;
  border-radius: 0;
  font-size: 16px;
  font-family: inherit;
  margin: 10px 0;
",
              ],
            },
            "displayName": "Input",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "input",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Save",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Save",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
              ],
            },
            "displayName": "Button",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htpNat",
          "isStatic": true,
          "rules": Array [
            "
  padding: 10px 28px;
",
          ],
        },
        "displayName": "Content",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htpNat",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": true,
        "rules": Array [
          "
  height: 100%;
",
        ],
      },
      "displayName": "Container",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef>
          <ForwardRef
            onClick={[Function]}
          >
            Increment
          </ForwardRef>
          <ForwardRef
            onClick={[Function]}
          >
            Decrement
          </ForwardRef>
          <ForwardRef
            onClick={[Function]}
          >
            Clear
          </ForwardRef>
          Set Directly:
          <ForwardRef
            onChange={[Function]}
            type="number"
            value={0}
          />
           
          <br />
          <ForwardRef
            onClick={[Function]}
          >
            Save
          </ForwardRef>
        </ForwardRef>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              onClick={[Function]}
            >
              Increment
            </ForwardRef>,
            <ForwardRef
              onClick={[Function]}
            >
              Decrement
            </ForwardRef>,
            <ForwardRef
              onClick={[Function]}
            >
              Clear
            </ForwardRef>,
            "Set Directly:",
            <ForwardRef
              onChange={[Function]}
              type="number"
              value={0}
            />,
            " ",
            <br />,
            <ForwardRef
              onClick={[Function]}
            >
              Save
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Increment",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Increment",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
                ],
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Decrement",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Decrement",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
                ],
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Clear",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Clear",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
                ],
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          "Set Directly:",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onChange": [Function],
              "type": "number",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-EHOje",
                "isStatic": true,
                "rules": Array [
                  "
  box-sizing: border-box;
  display: block;
  background-color: transparent;
  color: rgba(0, 0, 0, 0.87);
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.26);
  outline: 0;
  width: 100%;
  padding: 0;
  box-shadow: none;
  border-radius: 0;
  font-size: 16px;
  font-family: inherit;
  margin: 10px 0;
",
                ],
              },
              "displayName": "Input",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-EHOje",
              "target": "input",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Save",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Save",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
  text-transform: uppercase;
  transition: all 0.2s ease-in-out;
  display: block;
  height: 36px;
  padding: 0 26px;
  border: none;
  border-radius: 2px;
  cursor: pointer;
  text-align: center;
  line-height: 36px;
  vertical-align: middle;
  white-space: nowrap;
  font-size: 14px;
  font-family: inherit;
  letter-spacing: 0.03em;
  position: relative;
  margin: 14px 0;
  width: 100%;
  
  &:focus {
    outline: 0;
  }
    
  &:hover {
    color: #fff;
    background-color: #39a1f4;
    outline: 0;
    text-decoration: none;
    border: none;
  }
",
                ],
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "button",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  padding: 10px 28px;
",
            ],
          },
          "displayName": "Content",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": true,
          "rules": Array [
            "
  height: 100%;
",
          ],
        },
        "displayName": "Container",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
